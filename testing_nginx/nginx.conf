server {
    listen       443 ssl;
    listen  [::]:443 ssl;
    server_name  fnfcentral.com;

    include /etc/nginx/https.conf;

    location / {
        include /etc/nginx/proxy.conf;

        proxy_pass http://frontend;
    }
}

server {
    listen       443 ssl;
    listen  [::]:443 ssl;
    server_name  api.fnfcentral.com;

    include /etc/nginx/https.conf;
    include /etc/nginx/proxy.conf;

    location / {
        

        client_max_body_size 200M;

        proxy_pass http://api;
    }
}

server {
    listen       443 ssl;
    listen  [::]:443 ssl;
    server_name  raw.fnfcentral.com;

    include /etc/nginx/https.conf;

    location = / {
        try_files $uri /nice_try.html;
    }

    # I'm not going to even try and mess with NGinx Regex, so here is my super lazy solution
    location = /nice_try.html {
        try_files $uri /nice_try.html;
    }

    location /ipfs {
        include /etc/nginx/proxy.conf;

        proxy_pass http://ipfs0:8080;
    }


    location / {
        include /etc/nginx/proxy.conf;

        proxy_pass http://ipfs0:8080/ipfs/;
    }
}

server {
    listen       443 ssl;
    listen  [::]:443 ssl;
    server_name  metrics.fnfcentral.com;

    include /etc/nginx/https.conf;

    location / {
        include /etc/nginx/proxy.conf;
        
        proxy_pass http://grafana:3000;
    }
}

server {
    listen       443 ssl;
    listen  [::]:443 ssl;
    server_name  user.fnfcentral.com;

    include /etc/nginx/https.conf;

    location / {
        include /etc/nginx/proxy.conf;

        add_header 'Access-Control-Allow-Origin' 'https://fnfcentral.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type' always;

        proxy_pass http://kratos:4433;
    }
}

# HTTP Redirect
server {
    listen       80;
    listen  [::]:80;

    server_name _;

    return 301 https://$host$request_uri;
}

# Stats Server
server {
    listen     8080; 

    location = /status {
        stub_status;
    }
}